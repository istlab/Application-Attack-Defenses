We want to thank the reviewers for their meaningful comments.

As a general remark we need to say that as we state in the
paper, we did not include in our categorization mechanisms that
have not been presented in a research paper. However, Caja
is an important mechanism and this is why we reference it
as a framework that is widely used. Also, we are aware
that some of the presented approaches utilize
either static or dynamic analysis. As we explain in the paper though,
we dismiss static and dynamic approaches that identify
vulnerabilities that may lead to injection attacks
(there is a corresponding survey that covers this area [14])
and cover protection mechanisms that counter such attacks when
they take place.

Rev1:

Concerning the skepticism on the sensitivity and specificity metrics
we need to mention that these metrics should be more widely applicable,
but they are not, because not enough data is given in the
original publications as we remark in VII.A. Also, the
usefulness of such metrics in computer security has been advocated
by other researchers as well, as we discuss in the same Section.

It is true that there are to many N/As in both Tables and especially in
Table II. However, we believe that issues concerning code availability and
accuracy testing are instantly identified by a casual reader.

We agree that we should (and we will) incorporate the term "injection"
into the paper's title.

We can include ADsafe etc. in the paper in the way we
include Google Caja. Also, we will include FlowFox and
JSand (both have >20 citations --- our threshold),
and the paper presenting IFC in WebKit's
JavaScript Bytecode (which is a recent paper presented in a
respected venue) in the paper. We could also include AdSentry,
Contego and JSFlow too, but they do not reach our citation threshold.

We agree that using "security" as a term for one of our dimensions
may be misleading since it is a generic term and in this case
we need to make it more specific.

The point about the minimalism of the security discussion is actually
pretty good and we will try to enrich this part. A first attempt
would be to say that approaches that provide systematic
arguments on why their designs are secure, are not as
by-passable as the approaches coming from the other
category.

We can update our model to show where the language and web
framework-level protection mechanisms detect an attack
(the point would be at the application level within the server).

The comments concerning Firing Range, XCS attacks, scriptless attacks
and attacks that involve plug-ins are valid and we are
planning to address them.

Rev2:

Please note that even if we wanted to perform original tests on the
systems we studied, or even if we wanted to validate the existing
tests, we would not be able to do so in the vast majority of cases, as
indicated in Table II; this is in fact one of our main findings, as we
explain in VII.B.

We tried to equally cover every mechanism and then as the paper
progresses we highlight the reasons why a mechanism may be widely
used or not. In our conclusion section, we particularly mention
that CSP is one of the few mechanisms that contrary to others,
has been presented in a research publication and at the same time
is widely used. Furthermore, it is true that if a programmer uses
secure coding practices like prepared statements, then
a mechanism that counters SQLIAs is not necessarily needed.
However, as we mention in the paper, programmers are not always
that careful and this is why protection mechanisms like SQLrand
have been proposed in the first place.

In our model description, we state that there are two
ways to initiate the majority of the presented attacks.
In both cases, the first steps will result to the same path.
To distinguish these first steps we use the 1 - 1.1 notation.
The point concerning the PHP injection attack is valid. In general,
we tried to illustrate the most known injection attacks in our
model. Still, we can incorporate such an attack in our model
with minor modifications.

Finally, our model covers attacks that utilize DSL languages in general,
while in our categorization there is more than one countermeasures that
protects from XPath injection attacks.

Rev3:

We do agree with the comment on the "ease of use" dimension and we will
address it in our next revision. Also, the comment about the EiQ is
correct: it is DBAL. Finally, we will update our SQL injection
example to make it clearer.

We fully agree with the the fact that the sensitivity and specificity
metrics could also be expressed in terms of conditional probability
and we can add that to the power.

With our discussion in page 2 and 13 respectively we
want to highlight that we cannot carry out a set of measurements,
calculate sensitivity and specificity, and then using the {True | False
} {Positives | Negatives} calculate the PPV and the NPV from equations
3 and 4 directly. One has to go instead through equations 5 and 6.

Taking into account all the related comments, we will
update the paper to highlight the advantages of PPV and NPV.
The gist is that, indeed, PPV and NPV answer the question
about trusting a detection result; it is not always
possible to get data for them (since we may not know the prevalence),
but it may worth to try and get it, or this could be a new research
direction. Of course, if we do have such data, it is a way to
operationalize the protection a system provides.

The comment on the skewed data is valid and we can
elaborate on it more. The validity of test data is in fact
important independently of sensitivity and specificity;
skewed test data will give a wrong picture anyway, even if nobody
bothers to calculate the metrics. We do not know in the
papers we studied whether test data were skewed. We do find,
however, that: more tests could have been
carried out (Table I and VII.A) and the means to conduct tests should be
made available to third parties (Table II and VII.B).

Rev4:

We need to make clear that we do not want to criticize the lack of testing
in etiological mechanisms. In fact, we try to investigate
the reason why such mechanisms are not widely used and we suggest
that this is one reason.

Regarding the comment about demanding prevalence, we need to say that
as we state in the paper, it may be unfair to ask of
researchers to provide PPV and NPV values for
their mechanisms---in fact, nobody does. In the
last paragraph of first column in p.13 we explore what
this would require. We can elaborate more.

